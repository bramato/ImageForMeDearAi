# Image Generation MCP Server Configuration
# Copy this file to .env and fill in your API keys

# =============================================================================
# OpenAI/ChatGPT Configuration
# =============================================================================
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here
CHATGPT_ENABLED=true
CHATGPT_MODEL=dall-e-3
# Optional: Organization ID if you're part of an organization
# OPENAI_ORGANIZATION=your-org-id
# Optional: Custom base URL if using a proxy or alternative endpoint
# OPENAI_BASE_URL=https://api.openai.com/v1
# Optional: Request timeout in milliseconds (default: 30000)
# CHATGPT_TIMEOUT=30000

# =============================================================================
# HuggingFace Configuration
# =============================================================================
# Get your token from: https://huggingface.co/settings/tokens
HUGGINGFACE_API_KEY=your-huggingface-token-here
HUGGINGFACE_ENABLED=true
HUGGINGFACE_MODEL=stabilityai/stable-diffusion-xl-base-1.0
# Optional: Custom endpoint if using a different inference endpoint
# HUGGINGFACE_ENDPOINT=https://api-inference.huggingface.co
# Optional: Request timeout in milliseconds (default: 30000)
# HUGGINGFACE_TIMEOUT=30000

# Alternative HuggingFace models you can try:
# HUGGINGFACE_MODEL=stabilityai/stable-diffusion-2-1
# HUGGINGFACE_MODEL=runwayml/stable-diffusion-v1-5
# HUGGINGFACE_MODEL=stabilityai/stable-diffusion-xl-refiner-1.0

# =============================================================================
# Server Configuration
# =============================================================================
SERVER_NAME=image-for-me-dear-ai
SERVER_VERSION=1.0.0
# Optional: Server port (not typically used for MCP servers)
# SERVER_PORT=3000

# =============================================================================
# Output Configuration
# =============================================================================
# Directory where generated images will be saved
OUTPUT_DIRECTORY=./generated-images
# Default output format for images
OUTPUT_FORMAT=png
# File naming pattern (supports: {{timestamp}}, {{hash}}, {{uuid}})
OUTPUT_NAMING={{timestamp}}-{{hash}}

# =============================================================================
# Cache Configuration
# =============================================================================
# Enable/disable caching system
CACHE_ENABLED=true
# Cache directory path
CACHE_DIRECTORY=./cache
# Maximum number of cached items
CACHE_MAX_SIZE=100
# Cache TTL in milliseconds (86400000 = 24 hours)
CACHE_TTL=86400000

# Cache TTL options:
# 1 hour:    3600000
# 6 hours:   21600000
# 12 hours:  43200000
# 24 hours:  86400000
# 7 days:    604800000
# 30 days:   2592000000

# =============================================================================
# Performance Configuration
# =============================================================================
# Maximum number of concurrent requests (optional)
# MAX_CONCURRENT_REQUESTS=5
# Request queue timeout in milliseconds (optional)
# QUEUE_TIMEOUT=60000

# =============================================================================
# Logging Configuration
# =============================================================================
# Log level: debug, info, warn, error (default: info)
# LOG_LEVEL=info
# Enable detailed request logging (default: false)
# LOG_REQUESTS=false
# Log file path (optional, logs to console by default)
# LOG_FILE=./logs/server.log

# =============================================================================
# Development Configuration
# =============================================================================
# Enable development mode with detailed debugging (default: false)
# NODE_ENV=development
# Enable hot reload for development (default: false)
# HOT_RELOAD=false